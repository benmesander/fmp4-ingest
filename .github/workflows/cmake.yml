name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    #strategy:
    #  matrix:
    #    node-version: [10.x, 12.x, 14.x, 15.x]

    steps:
    - uses: actions/checkout@v2
      with:
         submodules: recursive
         
    #- uses: actions/setup-node@v2
    #  with:
    #    node-version: ${{ matrix.node-version }}
      
    - name: Install curl lib
      run: |
        sudo apt-get install libcurl4-openssl-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/ingest-tools/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/ingest-tools/build --config ${{env.BUILD_TYPE}}
      
    - name: Show build folder
      working-directory: ${{github.workspace}}/ingest-tools/build/ingest-tools/
      # Build your program with the given configuration
      run: ls -all

    - name: Run Unit Test
      working-directory: ${{github.workspace}}/ingest-tools/build/ingest-tools/
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./unittests  
      
    - name: Copy test file tos-096-750k.cmfv
      working-directory: ${{github.workspace}}/ingest-tools/
      run: cp test_files/tos-096-750k.cmfv build/ingest-tools/test.cmfv
      
    - name: run fmp4dump
      working-directory: ${{github.workspace}}/ingest-tools/build/ingest-tools/
      run: ./fmp4dump test.cmfv
      
    - name: run fmp4Init to create init segment
      working-directory: ${{github.workspace}}/ingest-tools/build/ingest-tools/
      run: ./fmp4Init test.cmfv out_init.cmfv
      
    - name: run fmp4dump with init segment
      working-directory: ${{github.workspace}}/ingest-tools/build/ingest-tools/
      run: ./fmp4dump out_init.cmfv
    
   # - name: Use Node.js ${{ matrix.node-version }}
   #   working-directory: ${{github.workspace}}/ingest-tools/
   #   run: node ingest_receiver_node.js
    
    - name: run fmp4ingest with no arguments
      working-directory: ${{github.workspace}}/ingest-tools/build/ingest-tools/
      run: ./fmp4ingest 

